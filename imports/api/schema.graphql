type League {
  _id: ID
  usersInLeague: [User]
  leagueCreator: User
  name: String
  maxLeagueSize: Int
  maxTeamSize: Int
  auctionStartingMoney: Int
  startTimeBetweenNomination: Int
  startBidTime: Int
  isDraftDone: Boolean
  hasDraftStarted: Boolean
  userTurnOrder: [User]
  currentUserTurnIndex: Int
  currentBidClock: Int
  currentNominationClock: Int
  currentPlayerUpForBidId: Player
  currentBids: [Bid]
  didNominateOnTime: Boolean
  playersDrafted: [Player]
}

type Bid {
  value: Int
  user: User
}

type User {
  _id: ID
  profile: UserProfile
}

type UserProfile {
  team: UserTeam
  draftMoney: Int
}

type UserTeam {
  name: String
  players: [Player]
}

type Player {
  _id: ID
  commonName: String
  firstName: String
  headshotImgUrl: String
  lastName: String
  position: String
  playStyle: String
  height: Int
  weight: Int
  birthdate: String
  age: Int
  acceleration: Int
  aggression: Int
  agility: Int
  balance: Int
  ballcontrol: Int
  foot: String
  skillMoves: Int
  crossing: Int
  curve: Int
  dribbling: Int
  finishing: Int
  freekickaccuracy: Int
  gkdiving: Int
  gkhandling: Int
  gkkicking: Int
  gkpositioning: Int
  gkreflexes: Int
  headingaccuracy: Int
  interceptions: Int
  jumping: Int
  longpassing: Int
  longshots: Int
  marking: Int
  penalties: Int
  positioning: Int
  potential: Int
  reactions: Int
  shortpassing: Int
  shotpower: Int
  slidingtackle: Int
  sprintspeed: Int
  standingtackle: Int
  stamina: Int
  strength: Int
  vision: Int
  volleys: Int
  weakFoot: Int
  traits: [String]
  specialities: [String]
  atkWorkRate: String
  defWorkRate: String
  playerType: String
  attributes: [PlayerAttribute]
  name: String
  quality: String
  color: String
  isGK: Boolean
  positionFull: String
  isSpecialType: Boolean
  id: String
  baseId: Int
  rating: Int
}

type PlayerAttribute {
  name: String
  value: Int
}

type Query {
  say: String
}
